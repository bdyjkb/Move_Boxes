class Wall {
	
	field int ref_x, ref_y;
	field int unit;
	
	constructor Wall new(int x, int y, int u){
		let ref_x = x;
		let ref_y = y;
		let unit = u;
		return this;
	}

	method void draw(int x, int y){
		let x = ref_x + (x * unit);
		let y = ref_y + (y * unit);
		do Screen.setColor(true);
		do Screen.drawRectangle(x+1, y+1, x+18, y+8);
		do Screen.drawRectangle(x, y+11, x+8, y+18);
		do Screen.drawRectangle(x+11, y+11, x+19, y+18);
		return;
	}

	method void draw_dest(int x, int y) {
		let x = ref_x + (x * unit);
		let y = ref_y + (y * unit);
		do Screen.setColor(true);
		do Screen.drawRectangle(x+5, y+1, x+6, y+15);
		do Screen.drawRectangle(x+3, y+16, x+11, y+17);
		do Screen.drawPixel(x+7, y+2);
		do Screen.drawPixel(x+8, y+3);
		do Screen.drawPixel(x+9, y+3);
		do Screen.drawPixel(x+10, y+4);
		do Screen.drawPixel(x+11, y+4);
		do Screen.drawPixel(x+12, y+5);
		do Screen.drawPixel(x+13, y+5);
		do Screen.drawPixel(x+17, y+5);
		do Screen.drawPixel(x+16, y+6);
		do Screen.drawPixel(x+15, y+7);
		do Screen.drawPixel(x+14, y+8);
		do Screen.drawPixel(x+13, y+9);
		do Screen.drawPixel(x+12, y+10);
		do Screen.drawPixel(x+11, y+10);
		do Screen.drawPixel(x+8, y+10);
		do Screen.drawPixel(x+7, y+10);
		do Screen.drawRectangle(x+14, y+4, x+16, y+4);
		do Screen.drawRectangle(x+8, y+11, x+10, y+11);
		return;
	}

	method void wipe_dest(int x, int y){
		let x = ref_x + (x * unit);
		let y = ref_y + (y * unit);
		do Screen.setColor(false);
		do Screen.drawRectangle(x, y, x+unit-1, y+unit-1);
		return;
	}

	method void dispose(){
		do Memory.deAlloc(this);
		return;
	}
}
