class MoveBoxes {
	field String map;
	field int row_length, column_length;
	field Player player;
	field Wall wall;
	field Box box;
	field State state;
	field int box_cnt;

	constructor MoveBoxes new(int row_l, int column_l, String s, int ref_x, int ref_y, int unit) {
		let row_length = row_l;
		let column_length = column_l;
		let map = s;

		let player = Player.new(ref_x, ref_y, unit);
		let wall = Wall.new(ref_x, ref_y, unit);
		let box = Box.new(ref_x, ref_y, unit);

		let box_cnt = 0;

		do Screen.clearScreen();
		// edit by Yisheng, I want to let init() clear screen by itself.

		return this;
	}
	
	method void init() {
		var int i;
		var int now_x, now_y;
		var int type;

		let i = 0;
		while(i < (row_length * column_length)) {
			let now_y = i / row_length;
			let now_x = i - (now_y * row_length);

			let type = map.charAt(i) - 48;
			// player
			if(type = 1) {
				do player.set_pos(now_x, now_y);
				do player.draw();
			}
			// box
			if(type = 2) {
				do box.draw(now_x, now_y);
				let box_cnt = box_cnt + 1;
			}	
			// dest	
			if(type = 3) {
				do wall.draw_dest(now_x, now_y);
			}
			// wall
			if(type = 4) {
				do wall.draw(now_x, now_y);
			}
			// sign_box
			if(type = 5) {
				do box.sign_draw(now_x, now_y);
			}

			let i = i + 1;
		}

		let state = State.new(0, box_cnt);

		return ;
	}

	method int run() {
		var char key;
		var boolean exit;
		var int pos_x, pos_y;
		var int now_x, now_y;
		var int next_x, next_y;
		var int type;
		var int next_type;
		
		let key = getKeyPressed();
		
		if(key = 81) {
			let exit = true;
		}
		else {
			let exit = false;
		}
		
		while(~exit) {
			let pos_x = player.get_x();
			let pos_y = player.get_y();

			// up
			if(key = 131) {
				let now_x = pos_x;
				let now_y = pos_y - 1;

				let next_x = now_x;
				let next_y = now_y - 1;
			}
			// down
			if(key = 133) {
				let now_x = pos_x;
				let now_y = pos_y + 1;

				let next_x = now_x;
				let next_y = now_y + 1;
			}
			// left
			if(key = 130) {
				let now_x = pos_x - 1;
				let now_y = pos_y;

				let next_x = now_x - 1;
				let next_y = now_y;
			}
			// right
			if(key = 132) {
				let now_x = pos_x + 1;
				let now_y = pos_y;

				let next_x = now_x + 1;
				let next_y = now_y;
			}

			let type = map.charAt(now_y * row_length + now_x) - 48;
			if(key = 0) {
				let type = 10;
			}

			if(type = 0) {
				do player.move(now_x, now_y);
				do player.set_pos(now_x, now_y);
				do state.add_step();

				if(map.charAt(pos_y * row_length + pos_x) - 48 = 3) {
					do wall.draw_dest(pos_x, pos_y);
				}
				else {
					do map.setCharAt(pos_y * row_length + pos_x, 0 + 48);
				}
				do map.setCharAt(now_y * row_length + now_x, 1 + 48); 
			}
			if(type = 2) {
				let next_type = map.charAt(next_y * row_length + next_x) - 48; 
				
				if(next_type = 0) {
					do box.move(now_x, now_y, next_x, next_y);
					do player.move(now_x, now_y);
					do player.set_pos(now_x, now_y);
					do state.add_step();
					
					if(map.charAt(pos_y * row_length + pos_x) - 48 = 3) {
						do wall.draw_dest(pos_x, pos_y);
					}
					else {
						do map.setCharAt(pos_y * row_length + pos_x, 0 + 48);
					}
					do map.setCharAt(now_y * row_length + now_x, 1 + 48);
					do map.setCharAt(next_y * row_length + next_x, 2 + 48);
				}
				if(next_type = 3) {
					do wall.wipe_dest(next_x, next_y);
					do box.sign_draw(next_x, next_y);
					do box.wipe(now_x, now_y);
					do player.move(now_x, now_y);
					
					do player.set_pos(now_x, now_y);

					let box_cnt = box_cnt - 1;

					do state.add_step();
					do state.box_left(box_cnt);
					
					if(map.charAt(pos_y * row_length + pos_x) - 48 = 3) {
						do wall.draw_dest(pos_x, pos_y);
					}
					else {
						do map.setCharAt(pos_y * row_length + pos_x, 0 + 48);
					}
					do map.setCharAt(now_y * row_length + now_x, 1 + 48);
					do map.setCharAt(next_y * row_length + next_x, 5 + 48);
				}
				if(next_type = 2) {
					do state.warn("You're too WEAK!!");
				}
				if(next_type = 4) {
					do state.warn("Don't push!! You will crush the box.");
				}
				if(next_type = 5) {
					do state.warn("You're too WEAK!!");
				}
			}
			if(type = 3) {
				do wall.wipe_dest(now_x, now_y);
				do player.move(now_x, now_y);
				do player.set_pos(now_x, now_y);

				do state.add_step();
				do state.warn("Kerker! I hide the flag!");
	
				if(map.charAt(pos_y * row_length + pos_x) - 48 = 3) {
					do wall.draw_dest(pos_x, pos_y);
				}
				else {
					do map.setCharAt(pos_y * row_length + pos_x, 0 + 48);
				}
			}
			if(type = 4) {
				do state.warn("The wall is harder than your head!!");
			}
			if(type = 5) {
				let next_type = map.charAt(next_y * row_length + next_x) - 48; 
				
				if(next_type = 0) {
					do box.sign_wipe(now_x, now_y);
					do box.draw(next_x, next_y);
					do player.move(now_x, now_y);
					do player.set_pos(now_x, now_y);

					let box_cnt = box_cnt + 1;

					do state.add_step();
					do state.box_left(box_cnt);
					
					if(map.charAt(pos_y * row_length + pos_x) - 48 = 3) {
						do wall.draw_dest(pos_x, pos_y);
					}
					else {
						do map.setCharAt(pos_y * row_length + pos_x, 0 + 48);
					}
					do map.setCharAt(now_y * row_length + now_x, 3 + 48);
					do map.setCharAt(next_y * row_length + next_x, 2 + 48);	
				}
				if(next_type = 3) {
					do wall.wipe_dest(next_x, next_y);
					do box.sign_draw(next_x, next_y);
					do box.sign_wipe(now_x, now_y);
					do player.move(now_x, now_y);
					
					do player.set_pos(now_x, now_y);

					do state.add_step();
					
					if(map.charAt(pos_y * row_length + pos_x) - 48 = 3) {
						do wall.draw_dest(pos_x, pos_y);
					}
					else {
						do map.setCharAt(pos_y * row_length + pos_x, 0 + 48);
					}
					do map.setCharAt(now_y * row_length + now_x, 3 + 48);
					do map.setCharAt(next_y * row_length + next_x, 5 + 48);	
				}
				if(next_type = 2) {
					do state.warn("You're too WEAK!!");
				}
				if(next_type = 4) {
					do state.warn("Don't push!! You will crush the box.");
				}
				if(next_type = 5) {
					do state.warn("You're too WEAK!!");
				}
			}

			do Sys.wait(40);

			if(box_cnt = 0) {
				do Sys.wait(1500);
				// Yisheng Lin add this line, for keep game a moment.
				do Screen.clearScreen();
				return 1;
			}

			let key = getKeyPressed();
			if(key = 81) {
				let exit = true;
			}
		}

		return 0;
	}

	method char getKeyPressed(){
		var char c;
		do Output.moveCursor(0, 0);
		let c = Keyboard.readChar();
		do Output.moveCursor(0, 0);
		return c;
	}
}
