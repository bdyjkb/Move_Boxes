class MoveBoxes {
	field String map;
	field int row_length, column_length;
	field Player player;
	field Wall wall;
	field Box box;
	field Step step;
	field int box_cnt;

	constructor MoveBoxes new(int row_l, int column_l, String s, int ref_x, int ref_y, int unit) {
		let row_length = row_l;
		let column_length = column_l;
		let map = s;

		let player = Player.new(ref_x, ref_y, unit);
		let wall = Wall.new(ref_x, ref_y, unit);
		let box = Box.new(ref_x, ref_y, unit);

		let step = Step.new(0);

		let box_cnt = 0;

		return this;
	}
	
	method void init() {
		var int i;
		var int now_x, now_y;
		var int type;

		let i = 0;
		while(i < (row_length * column_length)) {
			let now_y = i / row_length;
			let now_x = i - (now_y * row_length);

			let type = map.charAt(i) - 48;
			if(type = 4) {
				do wall.draw(now_x, now_y);
			}
			if(type = 2) {
				do box.draw(now_x, now_y);
				let box_cnt = box_cnt + 1;
			}
			if(type = 1) {
				do player.set_pos(now_x, now_y);
				do player.draw();
			}
			if(type = 3) {
				do wall.draw_dest(now_x, now_y);
			}

			let i = i + 1;
		}
		return ;
	}

	method void run() {
		var char key;
		var boolean exit;
		var int pos_x, pos_y;
		var int now_x, now_y;
		var int next_x, next_y;
		var int type;
		
		let key = getKeyPressed();
		
		if(key = 81) {
			let exit = true;
		}
		else {
			let exit = false;
		}
		
		while(~exit) {
			let pos_x = player.get_x();
			let pos_y = player.get_y();

			//up
			if(key = 131) {
				let now_x = pos_x;
				let now_y = pos_y - 1;

				let next_x = now_x;
				let next_y = now_y - 1;
			}
			//down
			if(key = 133) {
				let now_x = pos_x;
				let now_y = pos_y + 1;

				let next_x = now_x;
				let next_y = now_y + 1;
			}
			//left
			if(key = 130) {
				let now_x = pos_x - 1;
				let now_y = pos_y;

				let next_x = now_x - 1;
				let next_y = now_y;
			}
			//right
			if(key = 132) {
				let now_x = pos_x + 1;
				let now_y = pos_y;

				let next_x = now_x + 1;
				let next_y = now_y;
			}

			let type = map.charAt(now_y * row_length + now_x) - 48;
			if(key = 0) {
				let type = 10;
			}

			if(type = 0) {
				do player.move(now_x, now_y);
				do player.set_pos(now_x, now_y);
				do step.add();

				if(map.charAt(pos_y * row_length + pos_x) - 48 = 3) {
					do wall.draw_dest(pos_x, pos_y);
				}
				else {
					do map.setCharAt(pos_y * row_length + pos_x, 0 + 48);
				}
				do map.setCharAt(now_y * row_length + now_x, 1 + 48); 
			}
			if(type = 2) {
				if(map.charAt(next_y * row_length + next_x) - 48 = 0) {
					do box.move(now_x, now_y, next_x, next_y);
					do player.move(now_x, now_y);
					do player.set_pos(now_x, now_y);
					do step.add();
					
					do map.setCharAt(pos_y * row_length + pos_x, 0 + 48);
					do map.setCharAt(now_y * row_length + now_x, 1 + 48);
					do map.setCharAt(next_y * row_length + next_x, 2 + 48);
				}
				if(map.charAt(next_y * row_length + next_x) - 48 = 3) {
					do box.move(now_x, now_y, next_x, next_y);
					do player.move(now_x, now_y);
					do player.set_pos(now_x, now_y);
					do step.add();

					do Sys.wait(500);
					do box.wipe(next_x, next_y);
					do wall.draw_dest(next_x, next_y);

					do map.setCharAt(pos_y * row_length + pos_x, 0 + 48);
					do map.setCharAt(now_y * row_length + now_x, 1 + 48);

					let box_cnt = box_cnt - 1;
				}
			}
			if(type = 3) {
				do player.move(now_x, now_y);
				do player.set_pos(now_x, now_y);
				do step.add();

				do map.setCharAt(pos_y * row_length + pos_x, 0 + 48);
			}
			do Sys.wait(40);

			if(box_cnt = 0) {
				do Screen.clearScreen();
				return ;
			}

			let key = getKeyPressed();
			if(key = 81) {
				let exit = true;
			}
		}

		return ;
	}

	method char getKeyPressed(){
		var char c;
		do Output.moveCursor(0, 0);
		let c = Keyboard.readChar();
		do Screen.setColor(false);
		do Screen.drawRectangle(0, 0, 20, 20);
		return c;
	}
}
