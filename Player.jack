class Player {
    
    field int unit;
    field int x, y;
    field int ref_x, ref_y;

    constructor Player new(int x, int y, int u){
        let unit = u;
        let ref_x = x;
        let ref_y = y;
        return this;
    }

    method void set_pos(int pos_x, int pos_y){
        let x = pos_x;
        let y = pos_y;
        return;
    }
    
    method void draw(){
        var int i;
		var int r, c;
		let r = ref_x + (x * unit);
		let c = ref_y + (y * unit);
		do Screen.setColor(true);

		do Screen.drawLine(r+5, c, r+14, c);
		do Screen.drawLine(r+4, c+1, r+5, c+1);
		do Screen.drawLine(r+14, c+1, r+15, c+1);
		do Screen.drawLine(r+4, c+2, r+4, c+5);
		do Screen.drawLine(r+15, c+2, r+15, c+5);
		do Screen.drawPixel(r+3, c+5);
		do Screen.drawPixel(r+3, c+5);
		do Screen.drawPixel(r+16, c+5);
		do Screen.drawLine(r+7, c+2, r+7, c+3);
		do Screen.drawLine(r+12, c+2, r+12, c+3);
		do Screen.drawLine(r+9, c+4, r+10, c+4);
		do Screen.drawPixel(r+7, c+5);
		do Screen.drawPixel(r+12, c+5);
		do Screen.drawLine(r+8, c+6, r+11, c+6);
		do Screen.drawPixel(r+5, c+6);
		do Screen.drawPixel(r+14, c+6);
		do Screen.drawPixel(r+6, c+7);
		do Screen.drawPixel(r+14, c+7);
		do Screen.drawLine(r+7, c+8, r+12, c+8);
		//face

		do Screen.drawLine(r+2, c+6, r+2, c+7);
		do Screen.drawLine(r+17, c+6, r+17, c+7);
		do Screen.drawLine(r+1, c+8, r+1, c+12);
		do Screen.drawLine(r+18, c+8, r+18, c+12);
		do Screen.drawLine(r+2, c+13, r+4, c+13);
		do Screen.drawLine(r+15, c+13, r+17, c+13);
		do Screen.drawPixel(r+4, c+10);
		do Screen.drawPixel(r+15, c+10);
		do Screen.drawLine(r+5, c+10, r+5, c+12);
		do Screen.drawLine(r+14, c+10, r+14, c+12);
		do Screen.drawLine(r+6, c+9, r+6, c+13);
		do Screen.drawLine(r+13, c+9, r+13, c+13);
		//arm

		do Screen.drawPixel(r+5, c+14);
		do Screen.drawPixel(r+14, c+14);
		do Screen.drawPixel(r+4, c+15);
		do Screen.drawPixel(r+15, c+15);
		do Screen.drawPixel(r, c+18);
		do Screen.drawPixel(r+19, c+18);
		do Screen.drawPixel(r+8, c+16);
		do Screen.drawPixel(r+11, c+16);
		do Screen.drawLine(r+9, c+15, r+10, c+15);
		do Screen.drawLine(r+3, c+16, r+4, c+16);
		do Screen.drawLine(r+15, c+16, r+16, c+16);
		do Screen.drawLine(r+1, c+17, r+2, c+17);
		do Screen.drawLine(r+17, c+17, r+18, c+17);
		do Screen.drawLine(r+7, c+17, r+7, c+18);
		do Screen.drawLine(r+12, c+17, r+12, c+18);
		do Screen.drawLine(r, c+19, r+7, c+19);
		do Screen.drawLine(r+12, c+19, r+19, c+19);
		//leg

        return;
    }

    method void wipe(){
        var int i;
		var int r, c;
		var int div_r;
		let r = ref_x + (x * unit);
		let c = ref_y + (y * unit);
		do Screen.setColor(false);
		
		do Screen.drawLine(r+5, c, r+14, c);
		do Screen.drawLine(r+4, c+1, r+5, c+1);
		do Screen.drawLine(r+14, c+1, r+15, c+1);
		do Screen.drawLine(r+4, c+2, r+4, c+5);
		do Screen.drawLine(r+15, c+2, r+15, c+5);
		do Screen.drawPixel(r+3, c+5);
		do Screen.drawPixel(r+3, c+5);
		do Screen.drawPixel(r+16, c+5);
		do Screen.drawLine(r+7, c+2, r+7, c+3);
		do Screen.drawLine(r+12, c+2, r+12, c+3);
		do Screen.drawLine(r+9, c+4, r+10, c+4);
		do Screen.drawPixel(r+7, c+5);
		do Screen.drawPixel(r+12, c+5);
		do Screen.drawLine(r+8, c+6, r+11, c+6);
		do Screen.drawPixel(r+5, c+6);
		do Screen.drawPixel(r+14, c+6);
		do Screen.drawPixel(r+6, c+7);
		do Screen.drawPixel(r+14, c+7);
		do Screen.drawLine(r+7, c+8, r+12, c+8);
		//face

		do Screen.drawLine(r+2, c+6, r+2, c+7);
		do Screen.drawLine(r+17, c+6, r+17, c+7);
		do Screen.drawLine(r+1, c+8, r+1, c+12);
		do Screen.drawLine(r+18, c+8, r+18, c+12);
		do Screen.drawLine(r+2, c+13, r+4, c+13);
		do Screen.drawLine(r+15, c+13, r+17, c+13);
		do Screen.drawPixel(r+4, c+10);
		do Screen.drawPixel(r+15, c+10);
		do Screen.drawLine(r+5, c+10, r+5, c+12);
		do Screen.drawLine(r+14, c+10, r+14, c+12);
		do Screen.drawLine(r+6, c+9, r+6, c+13);
		do Screen.drawLine(r+13, c+9, r+13, c+13);
		//arm

		do Screen.drawPixel(r+5, c+14);
		do Screen.drawPixel(r+14, c+14);
		do Screen.drawPixel(r+4, c+15);
		do Screen.drawPixel(r+15, c+15);
		do Screen.drawPixel(r, c+18);
		do Screen.drawPixel(r+19, c+18);
		do Screen.drawPixel(r+8, c+16);
		do Screen.drawPixel(r+11, c+16);
		do Screen.drawLine(r+9, c+15, r+10, c+15);
		do Screen.drawLine(r+3, c+16, r+4, c+16);
		do Screen.drawLine(r+15, c+16, r+16, c+16);
		do Screen.drawLine(r+1, c+17, r+2, c+17);
		do Screen.drawLine(r+17, c+17, r+18, c+17);
		do Screen.drawLine(r+7, c+17, r+7, c+18);
		do Screen.drawLine(r+12, c+17, r+12, c+18);
		do Screen.drawLine(r, c+19, r+7, c+19);
		do Screen.drawLine(r+12, c+19, r+19, c+19);
		//leg

        return;
    }

    method void move(int next_x, int next_y){
        do wipe();
		let x = next_x;
		let y = next_y;
        do draw();
		return;
    }

	method int get_x(){
		return x;
	}
	method int get_y(){
		return y;
	}
}
